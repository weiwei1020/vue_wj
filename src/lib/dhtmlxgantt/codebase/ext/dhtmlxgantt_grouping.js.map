{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sources/ext/grouping.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","_groups","relation_property","relation_id_property","group_id","group_text","loading","loaded","init","self","this","attachEvent","clear","originalGetParent","$data","tasksStore","getParent","task","is_active","get_parent","apply","arguments","originalSetParent","setParent","new_pid","isTaskExists","parent","getTask","_setParentInner","id","type","config","types","project","$virtual","eachTask","tasks","undefined","_groups_pull","parent_id","root_id","find_parent","getTaskByTime","relation","root","length","generate_sections","list","groups_type","groups","group","copy","open","readonly","text","push","clear_temp_tasks","splice","generate_data","links","getLinks","categories","data","concat","update_settings","group_tasks","groups_array","_clear_data","parse","groupBy"],"mappings":"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","file":"ext/dhtmlxgantt_grouping.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 205);\n","gantt._groups = {\n\trelation_property: null,\n\trelation_id_property: '$group_id',\n\tgroup_id:null,\n\tgroup_text:null,\n\tloading: false,\n\tloaded:0,\n\tinit: function(gantt){\n\t\tvar self = this;\n\n\t\tgantt.attachEvent(\"onClear\", function(){\n\t\t\tself.clear();\n\t\t});\n\t\tself.clear();\n\n\t\tvar originalGetParent = gantt.$data.tasksStore.getParent;// gantt._get_parent_id;\n\t\tgantt.$data.tasksStore.getParent = function(task){\n\t\t\tif(self.is_active()){\n\t\t\t\treturn self.get_parent(gantt, task);\n\t\t\t}else{\n\t\t\t\treturn originalGetParent.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tvar originalSetParent = gantt.$data.tasksStore.setParent;\n\t\tgantt.$data.tasksStore.setParent = function(task, new_pid){\n\t\t\tif(!self.is_active()){\n\t\t\t\treturn originalSetParent.apply(this, arguments);\n\t\t\t}else if(gantt.isTaskExists(new_pid)){\n\t\t\t\tvar parent = gantt.getTask(new_pid);\n\t\t\t\ttask[self.relation_property] = parent[self.relation_id_property];\n\t\t\t\tthis._setParentInner.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n\t\t\tif(self.is_active()){\n\t\t\t\tif(task.type == gantt.config.types.project && !task.$virtual)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onBeforeParse\", function(){\n\t\t\tself.loading = true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskLoading\", function(){\n\t\t\tif(self.is_active()){\n\t\t\t\tself.loaded--;\n\t\t\t\tif(self.loaded <= 0){\n\t\t\t\t\tself.loading = false;\n\t\t\t\t\tgantt.eachTask(gantt.bind(function(t){\n\t\t\t\t\t\tthis.get_parent(gantt, t);\n\t\t\t\t\t}, self));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\n\t\t});\n\t\tgantt.attachEvent(\"onParse\", function(){\n\t\t\tself.loading = false;\n\t\t\tself.loaded = 0;\n\t\t});\n\t},\n\n\tget_parent: function(gantt, task, tasks){\n\n\t\tif(task.id === undefined){\n\t\t\ttask = gantt.getTask(task);\n\t\t}\n\n\t\tvar group_id = task[this.relation_property];\n\n\t\tif(this._groups_pull[group_id] !== undefined)\n\t\t\treturn this._groups_pull[group_id];\n\t\tvar parent_id = gantt.config.root_id;\n\n\t\tif(!this.loading){\n\t\t\tparent_id = this.find_parent(tasks || gantt.getTaskByTime(), group_id, this.relation_id_property, gantt.config.root_id);\n\t\t\tthis._groups_pull[group_id] = parent_id;\n\t\t}\n\n\t\treturn parent_id;\n\t},\n\tfind_parent: function(tasks, group_id, relation, root){\n\t\tfor(var i = 0; i < tasks.length; i++){\n\t\t\tvar task = tasks[i];\n\t\t\tif(task[relation] !== undefined && task[relation] == group_id){\n\t\t\t\treturn task.id;\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t},\n\tclear: function(){\n\t\tthis._groups_pull = {};\n\t\tthis.relation_property = null;\n\t\tthis.group_id = null;\n\t\tthis.group_text = null;\n\t},\n\tis_active: function(){\n\t\treturn !!(this.relation_property);\n\t},\n\tgenerate_sections: function(list, groups_type){\n\t\tvar groups = [];\n\t\tfor(var i = 0; i < list.length; i++){\n\t\t\tvar group = gantt.copy(list[i]);\n\t\t\tgroup.type = groups_type;\n\t\t\tgroup.open = true;\n\t\t\tgroup.$virtual = true;\n\t\t\tgroup.readonly = true;\n\t\t\tgroup[this.relation_id_property] = group[this.group_id];\n\t\t\tgroup.text = group[this.group_text];\n\t\t\tgroups.push(group);\n\t\t}\n\t\treturn groups;\n\n\t},\n\tclear_temp_tasks: function(tasks){\n\t\tfor(var i =0; i < tasks.length; i++){\n\t\t\tif(tasks[i].$virtual){\n\t\t\t\ttasks.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerate_data: function(gantt, groups){\n\t\tvar links = gantt.getLinks();\n\t\tvar tasks = gantt.getTaskByTime();\n\n\t\tthis.clear_temp_tasks(tasks);\n\n\t\tvar categories = [];\n\t\tif(this.is_active() && groups && groups.length){\n\t\t\tcategories = this.generate_sections(groups, gantt.config.types.project);\n\t\t}\n\n\t\tvar data = {links: links};\n\t\tdata.data = categories.concat(tasks);\n\n\t\treturn data;\n\t},\n\tupdate_settings: function(relation, group_id, group_text){\n\t\tthis.clear();\n\t\tthis.relation_property = relation;\n\t\tthis.group_id = group_id;\n\t\tthis.group_text = group_text;\n\t},\n\tgroup_tasks: function (gantt, groups_array, relation_property, group_id, group_text){\n\t\tthis.update_settings(relation_property, group_id, group_text);\n\t\tvar data = this.generate_data(gantt, groups_array);\n\t\tthis.loaded = data.data.length;\n\t\tgantt._clear_data();\n\t\tgantt.parse(data);\n\t}\n};\n\ngantt._groups.init(gantt);\ngantt.groupBy = function(config){\n\tconfig = config || {};\n\n\tvar groups = config.groups || null,\n\t\trelation_property = config.relation_property || null,\n\t\tgroup_id = config.group_id||\"key\",\n\t\tgroup_text = config.group_text||\"label\";\n\n\tthis._groups.group_tasks(this, groups, relation_property, group_id, group_text);\n};\n"],"sourceRoot":""}